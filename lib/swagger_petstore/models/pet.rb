# swagger_petstore
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module SwaggerPetstore
  # Pet Model.
  class Pet < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [Category]
    attr_accessor :category

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :name

    # TODO: Write general description for this method
    # @return [Array[String]]
    attr_accessor :photo_urls

    # TODO: Write general description for this method
    # @return [Array[Tag]]
    attr_accessor :tags

    # pet status in the store
    # @return [StatusEnum]
    attr_accessor :status

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['category'] = 'category'
      @_hash['name'] = 'name'
      @_hash['photo_urls'] = 'photoUrls'
      @_hash['tags'] = 'tags'
      @_hash['status'] = 'status'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        category
        tags
        status
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(name = nil,
                   photo_urls = nil,
                   id = SKIP,
                   category = SKIP,
                   tags = SKIP,
                   status = SKIP)
      @id = id unless id == SKIP
      @category = category unless category == SKIP
      @name = name
      @photo_urls = photo_urls
      @tags = tags unless tags == SKIP
      @status = status unless status == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      name = hash.key?('name') ? hash['name'] : nil
      photo_urls = hash.key?('photoUrls') ? hash['photoUrls'] : nil
      id = hash.key?('id') ? hash['id'] : SKIP
      category = Category.from_hash(hash['category']) if hash['category']
      # Parameter is an array, so we need to iterate through it
      tags = nil
      unless hash['tags'].nil?
        tags = []
        hash['tags'].each do |structure|
          tags << (Tag.from_hash(structure) if structure)
        end
      end

      tags = SKIP unless hash.key?('tags')
      status = hash.key?('status') ? hash['status'] : SKIP

      # Create object from extracted values.
      Pet.new(name,
              photo_urls,
              id,
              category,
              tags,
              status)
    end
  end
end
